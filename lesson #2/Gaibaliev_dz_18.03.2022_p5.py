# 5
# Вывести на экран эти цены через запятую в одну строку, цена должна отображаться в виде <r> руб <kk> коп (например «5 руб 04 коп»). Подумать, как из цены получить рубли и копейки, как добавить нули, если, например, получилось 7 копеек или 0 копеек (должно быть 07 коп или 00 коп).
# Вывести цены, отсортированные по возрастанию, новый список не создавать (доказать, что объект списка после сортировки остался тот же).
# Создать новый список, содержащий те же цены, но отсортированные по убыванию.
# Вывести цены пяти самых дорогих товаров. Сможете ли вывести цены этих товаров по возрастанию, написав минимум кода?

import random

price_1 = ['{:.2f}'.format(random.uniform(1, 100)) for x in range(1, 20)]
# pricelist = [13.15, 32.73, 80.12, 59.21, 59.33, 39.85, 6.07, 95.58, 13.12, 35.91, 57.86, 48.23, 35.40, 92.01, 82.15, 31.80, 85.65, 43.58, 88.18]
price_i_need_1 = list(map(str, price_1))  # меняем int на str, чтобы поделить числа по '.'

result = ''
for i in price_i_need_1:
    if '.' in i:
        rub = float(i) * 10 // 10  # чтобы получить целое число
        kop = (float(i) - rub) * 100  # умножаем на 100, чтобы получить остаток с двумя знаками перед запятой
        kop = int(kop)  # для корректного отображения приводим к целому числу
        if int(kop) < 10:  # если копейки < 10 - добавим 0 перед числом.
            result += f'{int(rub)} руб. 0{kop} коп.| '
        else:
            result += f'{int(rub)} руб. {kop} коп.|'
print(result)
#################################################
import random
price = ['{:.2f}'.format(random.uniform(1,100)) for i in range(1,20)] # генератор чисел
price_i_need = list(map(str, price)) # делаю преобразование в str, подругому не работает(?)
result = ''
for i in range(len(price_i_need)):
    price_i_need[i] = price_i_need[i].split('.') # делаю сплит по '.', чтобы вывести числа с помощью индекса
    result += f'{price_i_need[i][0]} руб. {price_i_need[i][1]} коп.|'
print(result)

# id списка цен
price_id = id(price_1)
print(price_id)
print(price_1)
# id отсортированного списка остается таким же, .sort() его не меняет
price_1.sort()
print(id(price_1))
print(price_1)
# создаю новый лист с сортировкой по убыванию. Зачем тут list - не понимаю, но без него не работает
new_list = list(reversed(price_1))
print(new_list)
# 5 самых дорогих товаров
print(price_1[-5:])
# or
print(new_list[:5])
